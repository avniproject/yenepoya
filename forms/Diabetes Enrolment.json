{
  "name" : "Diabetes Enrolment",
  "uuid" : "4a9513fb-f8b5-49c7-b172-b93d1bc54184",
  "formType" : "ProgramEnrolment",
  "formElementGroups" : [ {
    "uuid" : "5fe4d2e1-2383-4635-a870-34220444535b",
    "name" : "Details",
    "displayOrder" : 1.0,
    "display" : "Details",
    "formElements" : [ {
      "name" : "Adherence to medications (takes medications  at least 90% of the times)",
      "uuid" : "0e7e8f0e-b84d-45fc-8964-76516d813004",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Adherence to medications",
        "uuid" : "1341e326-d2b5-4cbc-b09a-108e10a84808"
      },
      "displayOrder" : 1.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Do you check your foot daily",
      "uuid" : "13edd0be-a5fa-4f13-a674-0fbf751a940d",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Do you check your foot daily",
        "uuid" : "644a912d-beb9-4140-a629-c6639b304e67"
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "What about your physical activity",
      "uuid" : "60e71c1c-962b-4f42-91b1-be00ebde1332",
      "keyValues" : [ ],
      "concept" : {
        "name" : "What about your physical activity",
        "uuid" : "d7e707f2-4c4e-47e8-8907-7dab7770fc89"
      },
      "displayOrder" : 3.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Alcohol use in last 1 year",
      "uuid" : "fadeb6ca-77c0-4ed4-9258-6cebb0de4fba",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Alcohol use in last 1 year",
        "uuid" : "29e472b6-0478-4de5-89f9-d7a4a373ff42"
      },
      "displayOrder" : 4.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "What about the use of tobacco (both smoke and smokeless)",
      "uuid" : "93f80f6c-7fce-4993-8615-4baf79836ea6",
      "keyValues" : [ {
        "key" : "ExcludedAnswers",
        "value" : [ "Started new after last visit" ]
      } ],
      "concept" : {
        "name" : "What about the use of tobacco",
        "uuid" : "ec3e201d-f4de-4705-b954-02c750ca5063"
      },
      "displayOrder" : 5.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Eating of fast foods like fried and bakery items weekly",
      "uuid" : "c89f8b06-6af9-4866-88b5-ac4589b069dc",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Eating of fast foods like fried and bakery items weekly",
        "uuid" : "182d8aef-512d-4d50-8fd8-95cb01f3ccbe"
      },
      "displayOrder" : 6.0,
      "type" : "SingleSelect",
      "mandatory" : true
    } ]
  }, {
    "uuid" : "fa40c32a-bcc3-4f9a-8710-91b42e97d9cc",
    "name" : "Details",
    "displayOrder" : 2.0,
    "display" : "Details ",
    "formElements" : [ {
      "name" : "Habit of vegetable intake atleast 3 servings daily",
      "uuid" : "d953e46a-205f-4dd2-a81c-6fec351a0e7f",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Habit of vegetable intake atleast 3 servings daily",
        "uuid" : "d31251b0-616a-47d5-84d6-7b5fad85baad"
      },
      "displayOrder" : 1.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Habit of fruit intake atleast 3 servings daily",
      "uuid" : "f441dddd-1648-41d1-a3a9-46c082c6d6de",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Habit of fruit intake atleast 3 servings daily",
        "uuid" : "2ec1f0cb-1e3a-4c1e-be3b-a9790a9d832d"
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Height in CM",
      "uuid" : "83877f6d-c925-4a0a-a196-bf418a7f251d",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Height in CM",
        "uuid" : "80d88c23-1e44-423a-96bf-5ddaf105042e"
      },
      "displayOrder" : 3.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Weight  in kgs",
      "uuid" : "34502cbd-1522-4678-8f9d-778c9314ce92",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Weight",
        "uuid" : "e9190320-3211-4d9f-a72c-288f42cf830c"
      },
      "displayOrder" : 4.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Mid arm circumference",
      "uuid" : "382780d9-25e4-4ef7-b26d-40873851519c",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Mid arm circumference",
        "uuid" : "44a608f8-54d3-4a8b-96b8-7175c65e1d01"
      },
      "displayOrder" : 5.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Waist circumference in cms",
      "uuid" : "2c612062-fff4-40b2-80fa-82dd936c91fb",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Waist circumference",
        "uuid" : "a9f45a38-99a7-4fd8-8e28-1291434eace0"
      },
      "displayOrder" : 6.0,
      "type" : "SingleSelect",
      "mandatory" : false
    }, {
      "name" : "Waist circumference is abnormal",
      "uuid" : "9b5da471-4d58-4b81-8bc6-e7335eeed429",
      "keyValues" : [ {
        "key" : "ExcludedAnswers",
        "value" : [ "Yes" ]
      } ],
      "concept" : {
        "name" : "Abnormal waist circumference",
        "uuid" : "c78e883a-60de-4629-8d85-8e4512cd13d5"
      },
      "displayOrder" : 7.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const formElement = params.formElement;\n  const statusBuilder = new\n  imports.rulesConfig.FormElementStatusBuilder({programEncounter, formElement});\n\n if(programEncounter.individual.isFemale()){\n statusBuilder.show().when.valueInEncounter('Waist circumference').greaterThanOrEqualTo(88);\n }\n if(programEncounter.individual.isMale()){\n statusBuilder.show().when.valueInEncounter('Waist circumference').greaterThanOrEqualTo(102);\n }\n    return statusBuilder.build();\n};\n",
      "mandatory" : false
    }, {
      "name" : "Waist circumference is normal",
      "uuid" : "80df1125-c81b-4f92-ba56-749a23223d2b",
      "keyValues" : [ {
        "key" : "ExcludedAnswers",
        "value" : [ "Yes" ]
      } ],
      "concept" : {
        "name" : "Waist circumference is normal",
        "uuid" : "1cae9bd0-0dba-4479-954a-2d569c58d711"
      },
      "displayOrder" : 8.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const formElement = params.formElement;\n  const statusBuilder = new\n  imports.rulesConfig.FormElementStatusBuilder({programEncounter, formElement});\n\n  if(programEncounter.individual.isFemale()){\n statusBuilder.show().when.valueInEncounter('Waist circumference').lessThan(88);\n }\n if(programEncounter.individual.isMale()){\n statusBuilder.show().when.valueInEncounter('Waist circumference').lessThan(102);\n }\n    return statusBuilder.build();\n};\n",
      "mandatory" : false
    } ]
  }, {
    "uuid" : "60cb744a-9897-4e1b-b269-8fbcb3097a49",
    "name" : "Details",
    "displayOrder" : 3.0,
    "display" : "Details",
    "formElements" : [ {
      "name" : "Blood Pressure (systolic)",
      "uuid" : "161679d1-6524-47a0-99c8-337189dae274",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Blood Pressure (systolic)",
        "uuid" : "7a320ebc-366d-4301-8e8b-71edcbaad78d"
      },
      "displayOrder" : 1.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Blood Pressure (Diastolic)",
      "uuid" : "130d5718-4a3a-4b7f-bc5d-85ca512d9ac8",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Blood Pressure (Diastolic)",
        "uuid" : "f9469b1c-47f5-494f-8e1e-e5dbb5c87b51"
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Fasting blood sugar level reports in last one month",
      "uuid" : "f1e69be0-55fa-4f57-945e-2b9ebb9a9728",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Fasting blood sugar level reports in last one month",
        "uuid" : "3e30648a-5829-45bb-b2ef-f797462c397e"
      },
      "displayOrder" : 3.0,
      "type" : "SingleSelect",
      "mandatory" : false
    }, {
      "name" : "Post prandial blood sugar level reports in last one month (if available)",
      "uuid" : "4046a4da-94c4-4c87-b631-2d4840a04a1b",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Post prandial blood sugar level reports in last one month",
        "uuid" : "22868608-488a-4be8-9dd3-d2c50fe1f6aa"
      },
      "displayOrder" : 4.0,
      "type" : "SingleSelect",
      "mandatory" : false
    }, {
      "name" : "Random blood sugar levels report (tested today)",
      "uuid" : "6c16cbbe-d8a9-4df9-b868-92b8a28f93c8",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Random blood sugar levels report",
        "uuid" : "18d36389-e42d-4366-a316-053407c3a0ab"
      },
      "displayOrder" : 5.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Whether your blood sugar level is under control",
      "uuid" : "7dd0fa70-e8da-4de0-be86-59a39e049c9a",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Whether your blood sugar level is under control",
        "uuid" : "319c1184-2afb-4e10-9523-840645b6a130"
      },
      "displayOrder" : 6.0,
      "type" : "SingleSelect",
      "mandatory" : true
    } ]
  } ],
  "decisionRule" : "\"use strict\";\n({params, imports}) => {\n    const programEncounter = params.entity;\n    const decisions = params.decisions;\n    const complicationsBuilder = new imports.rulesConfig.complicationsBuilder({\n        programEncounter: programEncounter,\n        complicationsConcept: 'Mid-Arm circumference status'\n    });\n    const midArmCircumference = programEncounter.getObservationValue('Mid arm circumference');\n\n    if (!_.isNil(midArmCircumference)) {\n        if (midArmCircumference < 19) {\n            complicationsBuilder\n                .addComplication(\"severe malnutrition\");\n        } else if (midArmCircumference >= 19 && midArmCircumference < 22) {\n            complicationsBuilder\n                .addComplication(\"moderate malnutrition\");\n        } else if (midArmCircumference == 22) {\n            complicationsBuilder\n                .addComplication(\"mild malnutrition\");\n        }else if(midArmCircumference >= 23) {\n            complicationsBuilder\n                .addComplication(\"Normal\");\n        }\n    }\n    \n    const isFemale = programEncounter.individual.isFemale();\n    const isMale = programEncounter.individual.isMale();\n    const waistCirumference = programEncounter.getObservationValue('Waist circumference');\n    \n    \n    const waistComplicationsBuilder = new imports.rulesConfig.complicationsBuilder({\n        programEncounter: programEncounter,\n        complicationsConcept: 'Waist circumference status'\n    });\n      \n     if(isMale){ \n      if( waistCirumference < 102){\n        waistComplicationsBuilder\n                .addComplication(\"Normal\");\n       }\n      if(waistCirumference >= 102){\n          waistComplicationsBuilder\n                .addComplication(\"Abnormal\");\n       }\n       \n     }\n      if(isFemale){ \n      if( waistCirumference < 88){\n        waistComplicationsBuilder\n                .addComplication(\"Normal\");\n       }\n      if(waistCirumference >= 88){\n          waistComplicationsBuilder\n                .addComplication(\"Abnormal\");\n       }\n       \n     }\n\n\n    decisions.encounterDecisions.push(complicationsBuilder.getComplications());\n    decisions.encounterDecisions.push(waistComplicationsBuilder.getComplications());\n    return decisions;\n};",
  "visitScheduleRule" : "\"use strict\";\n({ params, imports }) => {\n  const programEnrolment = params.entity;\n  const scheduleBuilder = new imports.rulesConfig.VisitScheduleBuilder({\n    programEnrolment\n  });\n const earliestDate=imports.moment(programEnrolment.enrolmentDateTime).add(6,'months').toDate();\n  scheduleBuilder\n    .add({\n      name: \"Diabetes Followup\",\n      encounterType: \"Diabetes Followup\",\n      earliestDate: earliestDate,\n      maxDate: imports.moment(earliestDate).add(15, 'days').toDate()\n    });\n           \n  return scheduleBuilder.getAll();\n};",
  "validationRule" : "",
  "checklistsRule" : ""
}